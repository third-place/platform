---
# Source: dev/charts/registry/templates/Namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: system
---
# Source: dev/charts/registry/templates/AppProject.yaml
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: system
  namespace: argocd
spec:
  description: System

  sourceRepos:
    - https://github.com/third-place/platform.git
    - ghcr.io/third-place

  destinations:
    - namespace: system
      server: https://kubernetes.default.svc

  # Deny all cluster-scoped resources from being created, except for Namespace
  clusterResourceWhitelist:

  # Enables namespace orphaned resource monitoring.
  orphanedResources:
    warn: true
---
# Source: dev/charts/registry/templates/Application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: system
  namespace: argocd
spec:
  project: system

  source:
    repoURL: https://github.com/third-place/platform.git
    targetRevision: main
    path: system

    helm:
      releaseName: system
      ignoreMissingValueFiles: true

      valueFiles:
        - values.yaml

      valuesObject:
        
        global:
          env: dev
          fqdn: thirdplaceapp.dev
          versions:
            backstage:
              version: 95a445d067728d99539ef9408ea1a07bf3bb26e2
            community-service:
              version: 8b3e3cb94c35f4350179617154d50f3ef46cdf08
            image-service:
              version: 3b68e7c300e79a61b217a64bd052a41275f509f5
            notification-service:
              version: c9886d81b74764a692bda2f3f05000fa9aef0007
            user-service:
              version: 1ad9301a5e89325916ec8aecd309ede4dd4313c1
            web-ui:
              version: 592c5e56554824d5f7550229ccebf105e1013f88

    # kustomize specific config
    kustomize:

  # Destination cluster and namespace to deploy the application
  destination:
    # cluster API URL
    server: https://kubernetes.default.svc
    # or cluster name
    # name: in-cluster
    # The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
    namespace: system

  # Sync policy
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: []

    # The retry feature is available since v1.7
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 20s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy

  # Will ignore differences between live and desired states during the diff. Note that these configurations are not
  # used during the sync process unless the `RespectIgnoreDifferences=true` sync option is enabled.
  ignoreDifferences: []

  # RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for
  # informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional
  # circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the
  # space used to store the history, so we do not recommend increasing it.
  revisionHistoryLimit: 10
